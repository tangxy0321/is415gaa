[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, tidyverse, tmap, sfdep, lubridate)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#study-area-preparation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#study-area-preparation",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "Study area preparation",
    "text": "Study area preparation\nAccording to the task objective given, this exercise requested for counties labelled D01, D02, D04, D06, D07, D08, D32 and D39\n\n\nShow the code\ntainan &lt;- tainan[tainan$TOWNID %in% c(\"D01\", \"D02\",\"D04\",\"D06\",\"D07\",\"D08\",\"D32\",\"D39\"),]\nplot(tainan)\n\n\nWarning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot\nall"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dengue-fever-layer-preparation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#dengue-fever-layer-preparation",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "Dengue fever layer preparation",
    "text": "Dengue fever layer preparation\nThis exercise requires dengue cases in Tainan, Taiwan. The original tibble is filtered by the condition where county name is equals to Tainan, and saved back to the same variable name.\n\n\nShow the code\ndengue &lt;- dengue %&gt;% \n  mutate(年 = factor(year(通報日)),\n         周 = week(通報日)) %&gt;% \n  filter(居住縣市 == \"台南市\",\n         年 == \"2023\",\n         周 &gt;= 31,\n         周 &lt;= 50) \n  \ndengue\n\n\n# A tibble: 20,789 × 28\n   發病日     個案研判日 通報日     性別  年齡層 居住縣市 居住鄉鎮 居住村里\n   &lt;date&gt;     &lt;chr&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   \n 1 2023-07-20 2023/08/03 2023-08-03 男    65-69  台南市   永康區   崑山里  \n 2 2023-07-20 2023/08/01 2023-08-01 男    5-9    台南市   永康區   復華里  \n 3 2023-07-22 2023/08/04 2023-08-04 女    10-14  台南市   永康區   復華里  \n 4 2023-07-22 2023/07/30 2023-07-30 男    50-54  台南市   永康區   正強里  \n 5 2023-07-24 2023/07/31 2023-07-31 男    10-14  台南市   東區     大智里  \n 6 2023-07-24 2023/07/31 2023-07-31 女    50-54  台南市   北區     None    \n 7 2023-07-24 2023/07/31 2023-07-30 男    65-69  台南市   北區     永祥里  \n 8 2023-07-25 2023/07/30 2023-07-30 女    55-59  台南市   永康區   三合里  \n 9 2023-07-25 2023/08/01 2023-07-30 女    65-69  台南市   南區     大成里  \n10 2023-07-25 2023/08/01 2023-07-30 男    40-44  台南市   北區     大港里  \n# ℹ 20,779 more rows\n# ℹ 20 more variables: 最小統計區 &lt;chr&gt;, 最小統計區中心點X &lt;chr&gt;,\n#   最小統計區中心點Y &lt;chr&gt;, 一級統計區 &lt;chr&gt;, 二級統計區 &lt;chr&gt;,\n#   感染縣市 &lt;chr&gt;, 感染鄉鎮 &lt;chr&gt;, 感染村里 &lt;chr&gt;, 是否境外移入 &lt;chr&gt;,\n#   感染國家 &lt;chr&gt;, 確定病例數 &lt;dbl&gt;, 居住村里代碼 &lt;chr&gt;, 感染村里代碼 &lt;chr&gt;,\n#   血清型 &lt;chr&gt;, 內政部居住縣市代碼 &lt;chr&gt;, 內政部居住鄉鎮代碼 &lt;chr&gt;,\n#   內政部感染縣市代碼 &lt;chr&gt;, 內政部感染鄉鎮代碼 &lt;chr&gt;, 年 &lt;fct&gt;, 周 &lt;dbl&gt;\n\n\nConvert dengue to sf object such that the object would be able to be projected to TWD97. Before conversion, check that there is no missing value in coordinates\n\n\nShow the code\nsum(dengue$最小統計區中心點X == \"None\")\n\n\n[1] 10\n\n\nShow the code\nsum(dengue$最小統計區中心點Y == \"None\")\n\n\n[1] 10\n\n\nDrop those with None values: Currently could not find a effective way to fill in, so to not obstruct the conversion into a sf object, I decided to drop the rows with “None” values for the coordinates columns.\n\n\nShow the code\ndengue &lt;- dengue %&gt;% \n  filter(最小統計區中心點X != \"None\",\n         最小統計區中心點Y != \"None\")\nsum(dengue$最小統計區中心點X == \"None\")\n\n\n[1] 0\n\n\nShow the code\nsum(dengue$最小統計區中心點Y == \"None\")\n\n\n[1] 0\n\n\nConvert dengue to sf object and assign projected coordinate system\n\n\nShow the code\ndengue &lt;- st_as_sf(dengue,\n                   coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                   crs = 3824)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-class Exercise 5: Global and Local Measures of Spatial Autocorrelation - sfdep methods",
    "section": "",
    "text": "Do it yourself\n\n\n\nUsing the strps learned in previous lesson, install packages sf\n\n\n\n\nShow the code\npacman::p_load(sf, sfdep, tmap, tidyverse)\n\n\nImport geospatial data\n\n\nShow the code\nhunan2012 &lt;- read.csv(\"data/aspatial/Hunan_2012.csv\")\nhunan_GDPPC &lt;- read.csv(\"data/aspatial/Hunan_GDPPC.csv\")\nhunan &lt;- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/In-class_Ex/In-class_Ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nShow the code\nhunan %&gt;% \n  st_transform(crs = 3414)\n\n\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 519287.2 ymin: 2635051 xmax: 1070836 ymax: 3242818\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     NAME_2  ID_3    NAME_3   ENGTYPE_3 Shape_Leng Shape_Area    County\n1   Changde 21098   Anxiang      County   1.869074 0.10056190   Anxiang\n2   Changde 21100   Hanshou      County   2.360691 0.19978745   Hanshou\n3   Changde 21101    Jinshi County City   1.425620 0.05302413    Jinshi\n4   Changde 21102        Li      County   3.474325 0.18908121        Li\n5   Changde 21103     Linli      County   2.289506 0.11450357     Linli\n6   Changde 21104    Shimen      County   4.171918 0.37194707    Shimen\n7  Changsha 21109   Liuyang County City   4.060579 0.46016789   Liuyang\n8  Changsha 21110 Ningxiang      County   3.323754 0.26614198 Ningxiang\n9  Changsha 21111 Wangcheng      County   2.292093 0.13049161 Wangcheng\n10 Chenzhou 21112     Anren      County   2.240739 0.13343936     Anren\n                         geometry\n1  POLYGON ((825339.4 3209148,...\n2  POLYGON ((846673.4 3139165,...\n3  POLYGON ((810038.7 3190827,...\n4  POLYGON ((756935.9 3225838,...\n5  POLYGON ((783475.6 3207079,...\n6  POLYGON ((708206.5 3241744,...\n7  POLYGON ((1024633 3091569, ...\n8  POLYGON ((900741.8 3060845,...\n9  POLYGON ((906766.3 3077439,...\n10 POLYGON ((959144.5 2890585,...\n\n\nCombine both dataframes by left_join\n\nleft table must be sf object\n\n\n\nShow the code\nhunan_GDPPC &lt;- left_join(hunan,\n                         hunan2012) %&gt;% \n  select(1:4,7,15)\n\n\nJoining with `by = join_by(County)`\n\n\nShow the code\nhunan_GDPPC1 &lt;- left_join(hunan,\n                         hunan2012)\n\n\nJoining with `by = join_by(County)`\n\n\nPlot choropleth map\n\n\nShow the code\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting\n\n\nShow the code\ntm_shape(hunan_GDPPC)+\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\")+\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.title.size = 0.45,\n            legend.height = 0.45 ,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5)+\n  tm_compass(type = \"8star\",\n             size = 2)+\n  tm_scale_bar()+\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nwm_q &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         # derived columns to be put before column 1\n         .before = 1)\n\n\nCompute global Moran’s I\n\n\nShow the code\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\nUse the test to get Moran’s I statistics\n\n\nShow the code\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nNow doing permutation version of Moran’s I test: more simulation to confirm representive of the I statistics result\n\nprove that the result produced is reproducible, and hence is stable\nnumber of simulation will affect result (especially with large dataset)\n-   reduce number of simulations when dataset is large, to 99 or even 49\n\n-   use `nsim = 99` to test speed of device (to get the approriate number of simulation)\n\n\n\nShow the code\nset.seed(1234)\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nWhen explaining statistical evidence:\n\np-value &gt; or &lt; alpha value\n\n(not) enough statistical evidence to reject null hypothesis that spatial distribution is (independent from spatial)\n\nMoran’s I statistics value &gt; or = or &lt; 0\n\nclustering, outlier, random"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#step-1-derive-contiguity-weight-queens-method",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#step-1-derive-contiguity-weight-queens-method",
    "title": "In-class Exercise 5: Global and Local Measures of Spatial Autocorrelation - sfdep methods",
    "section": "",
    "text": "Show the code\nwm_q &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         # derived columns to be put before column 1\n         .before = 1)\n\n\nCompute global Moran’s I\n\n\nShow the code\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\nUse the test to get Moran’s I statistics\n\n\nShow the code\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\nNow doing permutation version of Moran’s I test: more simulation to confirm representive of the I statistics result\n\nprove that the result produced is reproducible, and hence is stable\nnumber of simulation will affect result (especially with large dataset)\n-   reduce number of simulations when dataset is large, to 99 or even 49\n\n-   use `nsim = 99` to test speed of device (to get the approriate number of simulation)\n\n\n\nShow the code\nset.seed(1234)\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nWhen explaining statistical evidence:\n\np-value &gt; or &lt; alpha value\n\n(not) enough statistical evidence to reject null hypothesis that spatial distribution is (independent from spatial)\n\nMoran’s I statistics value &gt; or = or &lt; 0\n\nclustering, outlier, random"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "",
    "text": "Show the code\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n\n\n\n\nShow the code\npacman::p_load(maptools, sf, raster, spatstat, tidyverse)\n\n\n\n\nShow the code\nchildcare_sf &lt;- st_read(\"../../data/geospatial/ChildCareServices.geojson\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `ChildCareServices' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/data/geospatial/ChildCareServices.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\nShow the code\nmpsz_sf &lt;- st_read(dsn = \"../../data/geospatial\",\n                   layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#create-coastaloutline",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#create-coastaloutline",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Create CoastalOutline",
    "text": "Create CoastalOutline\n\n\nShow the code\nplot(mpsz_sf)\n\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nsize of map is by default taking the entire mpsz_sf boundary -&gt; appear small\n\n\nShow the code\nsg_sf &lt;- mpsz_sf %&gt;% \n  st_union()\nplot(sg_sf)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#creating-ppp-objects-directly-from-sf",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#creating-ppp-objects-directly-from-sf",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Creating ppp objects (directly from sf)",
    "text": "Creating ppp objects (directly from sf)\nNot necessary to convert into Spatial -&gt; sp -&gt; pp (Textbook chapter 4.5.1 to 4.5.3)\n\n\nShow the code\nchildcare_ppp &lt;- as.ppp(childcare_sf)\n\n\nWarning in as.ppp.sf(childcare_sf): only first attribute column is used for\nmarks\n\n\nArea unit not known -&gt; package design\n\n\nShow the code\nsummary(childcare_ppp)\n\n\nMarked planar point pattern:  1925 points\nAverage intensity 2.417323e-06 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nmarks are of type 'character'\nSummary:\n   Length     Class      Mode \n     1925 character character \n\nWindow: rectangle = [11810.03, 45404.24] x [25596.33, 49300.88] units\n                    (33590 x 23700 units)\nWindow area = 796335000 square units"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#handle-duplicated-data",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#handle-duplicated-data",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Handle duplicated data",
    "text": "Handle duplicated data\nCheck for duplicated data point\n\n\nShow the code\nany(duplicated(childcare_ppp))\n\n\n[1] FALSE\n\n\nCount number of co-indicence point\n\n\nShow the code\nmultiplicity(childcare_ppp)\n\n\n   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [149] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [186] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [223] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [260] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [297] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [334] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [371] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [408] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [445] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [482] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [519] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [556] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [593] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [630] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [667] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [704] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [741] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [778] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [815] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [852] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [889] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [926] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n [963] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1000] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1037] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1074] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1111] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1148] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1185] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1222] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1259] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1296] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1333] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1370] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1407] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1444] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1481] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1518] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1555] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1592] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1629] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1666] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1703] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1740] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1777] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1814] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1851] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1888] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n[1925] 1"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#create-owin-object",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#create-owin-object",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Create owin object",
    "text": "Create owin object\nLike above, one can directly convert sf into owin (No need to convert sf -&gt;sp -&gt; owin)\n\n\nShow the code\nsg_owin &lt;- as.owin(sg_sf)\nplot(sg_owin)\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nsummary(sg_owin)\n\n\nWindow: polygonal boundary\n80 separate polygons (35 holes)\n                  vertices         area relative.area\npolygon 1            14650  6.97996e+08      8.93e-01\npolygon 2 (hole)         3 -2.21090e+00     -2.83e-09\npolygon 3              285  1.61128e+06      2.06e-03\npolygon 4 (hole)         3 -2.05920e-03     -2.63e-12\npolygon 5 (hole)         3 -8.83647e-03     -1.13e-11\npolygon 6              668  5.40368e+07      6.91e-02\npolygon 7               44  2.26577e+03      2.90e-06\npolygon 8               27  1.50315e+04      1.92e-05\npolygon 9              711  1.28815e+07      1.65e-02\npolygon 10 (hole)       36 -4.01660e+04     -5.14e-05\npolygon 11 (hole)      317 -5.11280e+04     -6.54e-05\npolygon 12 (hole)        3 -3.41405e-01     -4.37e-10\npolygon 13 (hole)        3 -2.89050e-05     -3.70e-14\npolygon 14              77  3.29939e+05      4.22e-04\npolygon 15              30  2.80002e+04      3.58e-05\npolygon 16 (hole)        3 -2.83151e-01     -3.62e-10\npolygon 17              71  8.18750e+03      1.05e-05\npolygon 18 (hole)        3 -1.68316e-04     -2.15e-13\npolygon 19 (hole)       36 -7.79904e+03     -9.97e-06\npolygon 20 (hole)        4 -2.05611e-02     -2.63e-11\npolygon 21 (hole)        3 -2.18000e-06     -2.79e-15\npolygon 22 (hole)        3 -3.65501e-03     -4.67e-12\npolygon 23 (hole)        3 -4.95057e-02     -6.33e-11\npolygon 24 (hole)        3 -3.99521e-02     -5.11e-11\npolygon 25 (hole)        3 -6.62377e-01     -8.47e-10\npolygon 26 (hole)        3 -2.09065e-03     -2.67e-12\npolygon 27              91  1.49663e+04      1.91e-05\npolygon 28 (hole)       26 -1.25665e+03     -1.61e-06\npolygon 29 (hole)      349 -1.21433e+03     -1.55e-06\npolygon 30 (hole)       20 -4.39069e+00     -5.62e-09\npolygon 31 (hole)       48 -1.38338e+02     -1.77e-07\npolygon 32 (hole)       28 -1.99862e+01     -2.56e-08\npolygon 33              40  1.38607e+04      1.77e-05\npolygon 34 (hole)       40 -6.00381e+03     -7.68e-06\npolygon 35 (hole)        7 -1.40545e-01     -1.80e-10\npolygon 36 (hole)       12 -8.36709e+01     -1.07e-07\npolygon 37              45  2.51218e+03      3.21e-06\npolygon 38             142  3.22293e+03      4.12e-06\npolygon 39             148  3.10395e+03      3.97e-06\npolygon 40              75  1.73526e+04      2.22e-05\npolygon 41              83  5.28920e+03      6.76e-06\npolygon 42             211  4.70521e+05      6.02e-04\npolygon 43             106  3.04104e+03      3.89e-06\npolygon 44             266  1.50631e+06      1.93e-03\npolygon 45              71  5.63061e+03      7.20e-06\npolygon 46              10  1.99717e+02      2.55e-07\npolygon 47             478  2.06120e+06      2.64e-03\npolygon 48             155  2.67502e+05      3.42e-04\npolygon 49            1027  1.27782e+06      1.63e-03\npolygon 50 (hole)        3 -1.16959e-03     -1.50e-12\npolygon 51              65  8.42861e+04      1.08e-04\npolygon 52              47  3.82087e+04      4.89e-05\npolygon 53               6  4.50259e+02      5.76e-07\npolygon 54             132  9.53357e+04      1.22e-04\npolygon 55 (hole)        3 -3.23310e-04     -4.13e-13\npolygon 56               4  2.69313e+02      3.44e-07\npolygon 57 (hole)        3 -1.46474e-03     -1.87e-12\npolygon 58            1045  4.44510e+06      5.68e-03\npolygon 59              22  6.74651e+03      8.63e-06\npolygon 60              64  3.43149e+04      4.39e-05\npolygon 61 (hole)        3 -1.98390e-03     -2.54e-12\npolygon 62 (hole)        4 -1.13774e-02     -1.46e-11\npolygon 63              14  5.86546e+03      7.50e-06\npolygon 64              95  5.96187e+04      7.62e-05\npolygon 65 (hole)        4 -1.86410e-02     -2.38e-11\npolygon 66 (hole)        3 -5.12482e-03     -6.55e-12\npolygon 67 (hole)        3 -1.96410e-03     -2.51e-12\npolygon 68 (hole)        3 -5.55856e-03     -7.11e-12\npolygon 69             234  2.08755e+06      2.67e-03\npolygon 70              10  4.90942e+02      6.28e-07\npolygon 71             234  4.72886e+05      6.05e-04\npolygon 72 (hole)       13 -3.91907e+02     -5.01e-07\npolygon 73              15  4.03300e+04      5.16e-05\npolygon 74             227  1.10308e+06      1.41e-03\npolygon 75              10  6.60195e+03      8.44e-06\npolygon 76              19  3.09221e+04      3.95e-05\npolygon 77             145  9.61782e+05      1.23e-03\npolygon 78              30  4.28933e+03      5.49e-06\npolygon 79              37  1.29481e+04      1.66e-05\npolygon 80               4  9.47108e+01      1.21e-07\nenclosing rectangle: [2667.54, 56396.44] x [15748.72, 50256.33] units\n                     (53730 x 34510 units)\nWindow area = 781945000 square units\nFraction of frame area: 0.422"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#combine-point-event-to-owin-object",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#combine-point-event-to-owin-object",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Combine point event to owin object",
    "text": "Combine point event to owin object\n\n\nShow the code\nchildcareSG_ppp = childcare_ppp[sg_owin]"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#extract-planning-area",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-KDE.html#extract-planning-area",
    "title": "In-class Exercise 3: Kernel Density Estimation",
    "section": "Extract planning area",
    "text": "Extract planning area\nwith sf\n\n\nShow the code\npg &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N==\"TAMPINES\")\nck &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N==\"CHOA CHU KANG\")\njw &lt;- mpsz_sf %&gt;% \n  filter(PLN_AREA_N==\"JURONG WEST\")\n\n\nPlot target planning area\n\nmain option gives the title for each subplot (labelling purpose)\n\n\n\nShow the code\npar(mfrow=c(2,2))\nplot(pg, main = \"PUNGGOL\")\n\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nShow the code\nplot(tm, main = \"TAMPINES\")\n\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nShow the code\nplot(ck, main = \"CHOA CHU KANG\")\n\n\nWarning: plotting the first 10 out of 15 attributes; use max.plot = 15 to plot\nall\n\n\n\n\n\n\n\n\n\nShow the code\nplot(jw, main = \"JURONG WEST\")\n\n\nWarning: plotting the first 9 out of 15 attributes; use max.plot = 15 to plot\nall"
  },
  {
    "objectID": "data/geospatial/TAINAN_README.html",
    "href": "data/geospatial/TAINAN_README.html",
    "title": "TAIWAN_2020",
    "section": "",
    "text": "TAIWAN_2020\nSOURCE: 內政部國土測繪中心 版權所有\nhttps://whgis.nlsc.gov.tw/English/5-1Files.aspx\n鄉鎮市區界線(TWD97經緯度)1090324 2020/03/27 10:44:13 \n村(里)界(TWD97經緯度)1090324 2020/03/27 10:41:47"
  },
  {
    "objectID": "data/geospatial/TAINAN_VILLAGE.html",
    "href": "data/geospatial/TAINAN_VILLAGE.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html",
    "title": "In-class Exercise 3: Network Constrained Kernel Density Estimation (NKDE)",
    "section": "",
    "text": "This exercise is obtained from Chapter 7."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#prepare-lixels-object",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#prepare-lixels-object",
    "title": "In-class Exercise 3: Network Constrained Kernel Density Estimation (NKDE)",
    "section": "Prepare lixels object",
    "text": "Prepare lixels object\n\n\nShow the code\nlixels &lt;- lixelize_lines(network,\n                         # willingness of people to walk to a childcare centre or MRT station\n                         # bandwidth\n                         750,\n                         # mid-point of the distance\n                         mindist = 375)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#generate-line-centre-points",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03-NKDE.html#generate-line-centre-points",
    "title": "In-class Exercise 3: Network Constrained Kernel Density Estimation (NKDE)",
    "section": "Generate line centre points",
    "text": "Generate line centre points\n\n\nShow the code\nsamples &lt;- lines_center(lixels)\n\n\n\n\nShow the code\ndensities &lt;- nkde(network,\n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,\n                  ## important\n                  kernel_name = \"quartic\",\n                  bw = 300,\n                  ## important\n                  div = \"bw\",\n                  method = \"simple\",\n                  digits = 1,\n                  tol = 1,\n                  grid_shape = c(1,1),\n                  max_depth = 8,\n                  # aggregate events within 5m radius (faster calculation)\n                  agg = 5,\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\n\n\nShow the code\nsamples$density &lt;- densities\nlixels$density &lt;- densities\n\n\n\n\nShow the code\n# rescaling to help the mapping\nsamples$density &lt;- samples$density*1000\nlixels$density &lt;- lixels$density*1000\n\n\n\n\nShow the code\ntmap_mode(\"view\")\n\n\ntmap mode set to interactive viewing\n\n\nShow the code\ntm_shape(lixels) + \n  tm_lines(col=\"density\") +\ntm_shape(childcare) +\n  tm_dots()\n\n\n\n\n\n\nShow the code\ntmap_mode(\"plot\")\n\n\ntmap mode set to plotting"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-class Exercise 4: Spatial Weights and Applications: sf methods",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, spdep, tmap, tidyverse, knitr, GWmodel)\n\n\n\n\nShow the code\nhunan &lt;- st_read(dsn = \"../../data/geospatial\",\n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nShow the code\nhunan2012 &lt;- read_csv(\"../../data/aspatial/Hunan_2012.csv\")\n\n\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nShow the code\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7,15)\n\n\nJoining with `by = join_by(County)`\n\n\n\n\nThe GWmodel package only works with sp objects, so we need to transform sf into sp\n\n\nShow the code\nhunan_sp &lt;- hunan %&gt;% \n  as_Spatial()\n\n\n\nkernel: similar to that in Spatial Point Pattern Analysis, smoothing out\n\n\n\nShow the code\ngwstat &lt;- gwss(data = hunan_sp,\n               vars = \"GDPPC\",\n               bw = 6,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\ngwstat\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n\n   ***********************Calibration information*************************\n\n   Local summary statistics calculated for variables:\n    GDPPC\n   Number of summary points: 88\n   Kernel function: bisquare \n   Summary points: the same locations as observations are used.\n   Adaptive bandwidth: 6 (number of nearest neighbours)\n   Distance metric: Great Circle distance metric is used.\n\n   ************************Local Summary Statistics:**********************\n   Summary information for Local means:\nGDPPC_LM \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n10313.11 17616.21 21981.39 28547.05 73545.30 \n   Summary information for local standard deviation :\nGDPPC_LSD \n      Min.    1st Qu.     Median    3rd Qu.       Max. \n  926.3095  3319.0782  5041.7997  7602.3637 24377.4421 \n   Summary information for local variance :\nGDPPC_LVar \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n   858049.3  11030994.6  25419746.0  57798649.1 594259684.0 \n   Summary information for Local skewness:\nGDPPC_LSKe \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-3.74328455 -0.06903772  0.74202796  1.20539540  5.98374890 \n   Summary information for localized coefficient of variation:\nGDPPC_LCV \n      Min.    1st Qu.     Median    3rd Qu.       Max. \n0.04955751 0.15100369 0.22079470 0.33316203 0.95567593 \n\n   ************************************************************************"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#working-with-geographically-weighted-summary-statistics-gwss",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#working-with-geographically-weighted-summary-statistics-gwss",
    "title": "In-class Exercise 4: Spatial Weights and Applications: sf methods",
    "section": "",
    "text": "The GWmodel package only works with sp objects, so we need to transform sf into sp\n\n\nShow the code\nhunan_sp &lt;- hunan %&gt;% \n  as_Spatial()\n\n\n\nkernel: similar to that in Spatial Point Pattern Analysis, smoothing out\n\n\n\nShow the code\ngwstat &lt;- gwss(data = hunan_sp,\n               vars = \"GDPPC\",\n               bw = 6,\n               kernel = \"bisquare\",\n               adaptive = TRUE,\n               longlat = T)\ngwstat\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n\n   ***********************Calibration information*************************\n\n   Local summary statistics calculated for variables:\n    GDPPC\n   Number of summary points: 88\n   Kernel function: bisquare \n   Summary points: the same locations as observations are used.\n   Adaptive bandwidth: 6 (number of nearest neighbours)\n   Distance metric: Great Circle distance metric is used.\n\n   ************************Local Summary Statistics:**********************\n   Summary information for Local means:\nGDPPC_LM \n    Min.  1st Qu.   Median  3rd Qu.     Max. \n10313.11 17616.21 21981.39 28547.05 73545.30 \n   Summary information for local standard deviation :\nGDPPC_LSD \n      Min.    1st Qu.     Median    3rd Qu.       Max. \n  926.3095  3319.0782  5041.7997  7602.3637 24377.4421 \n   Summary information for local variance :\nGDPPC_LVar \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n   858049.3  11030994.6  25419746.0  57798649.1 594259684.0 \n   Summary information for Local skewness:\nGDPPC_LSKe \n       Min.     1st Qu.      Median     3rd Qu.        Max. \n-3.74328455 -0.06903772  0.74202796  1.20539540  5.98374890 \n   Summary information for localized coefficient of variation:\nGDPPC_LCV \n      Min.    1st Qu.     Median    3rd Qu.       Max. \n0.04955751 0.15100369 0.22079470 0.33316203 0.95567593 \n\n   ************************************************************************"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html",
    "title": "In-class Exercise 2:",
    "section": "",
    "text": "For this exercise, the following packages will be used.\n\narrow\nlubridate\ntidyverse\ntmap\nsf\n\n\n\nShow the code\npacman::p_load(\"arrow\",\"lubridate\",\"tidyverse\",\"tmap\",\"sf\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-data",
    "href": "In-class_Ex/In-class_Ex02/In-class_Ex02.html#import-data",
    "title": "In-class Exercise 2:",
    "section": "Import data",
    "text": "Import data"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "",
    "text": "Show the code\npacman::p_load(sf, tidyverse, tmap, sfdep, lubridate)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html#study-area-preparation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html#study-area-preparation",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "Study area preparation",
    "text": "Study area preparation\nAccording to the task objective given, this exercise requested for counties labelled D01, D02, D04, D06, D07, D08, D32 and D39\n\n\nShow the code\ntainan &lt;- tainan[tainan$TOWNID %in% c(\"D01\", \"D02\",\"D04\",\"D06\",\"D07\",\"D08\",\"D32\",\"D39\"),]\nplot(tainan)\n\n\nWarning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot\nall"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html#dengue-fever-layer-preparation",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part1.html#dengue-fever-layer-preparation",
    "title": "Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling",
    "section": "Dengue fever layer preparation",
    "text": "Dengue fever layer preparation\nThis exercise requires dengue cases in Tainan, Taiwan. The original tibble is filtered by the condition where county name is equals to Tainan, and saved back to the same variable name.\n\n\nShow the code\ndengue &lt;- dengue %&gt;% \n  mutate(年 = factor(year(通報日)),\n         周 = week(通報日)) %&gt;% \n  filter(居住縣市 == \"台南市\",\n         年 == \"2023\",\n         周 &gt;= 31,\n         周 &lt;= 50) \n  \ndengue\n\n\n# A tibble: 20,789 × 28\n   發病日     個案研判日 通報日     性別  年齡層 居住縣市 居住鄉鎮 居住村里\n   &lt;date&gt;     &lt;chr&gt;      &lt;date&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   \n 1 2023-07-20 2023/08/03 2023-08-03 男    65-69  台南市   永康區   崑山里  \n 2 2023-07-20 2023/08/01 2023-08-01 男    5-9    台南市   永康區   復華里  \n 3 2023-07-22 2023/08/04 2023-08-04 女    10-14  台南市   永康區   復華里  \n 4 2023-07-22 2023/07/30 2023-07-30 男    50-54  台南市   永康區   正強里  \n 5 2023-07-24 2023/07/31 2023-07-31 男    10-14  台南市   東區     大智里  \n 6 2023-07-24 2023/07/31 2023-07-31 女    50-54  台南市   北區     None    \n 7 2023-07-24 2023/07/31 2023-07-30 男    65-69  台南市   北區     永祥里  \n 8 2023-07-25 2023/07/30 2023-07-30 女    55-59  台南市   永康區   三合里  \n 9 2023-07-25 2023/08/01 2023-07-30 女    65-69  台南市   南區     大成里  \n10 2023-07-25 2023/08/01 2023-07-30 男    40-44  台南市   北區     大港里  \n# ℹ 20,779 more rows\n# ℹ 20 more variables: 最小統計區 &lt;chr&gt;, 最小統計區中心點X &lt;chr&gt;,\n#   最小統計區中心點Y &lt;chr&gt;, 一級統計區 &lt;chr&gt;, 二級統計區 &lt;chr&gt;,\n#   感染縣市 &lt;chr&gt;, 感染鄉鎮 &lt;chr&gt;, 感染村里 &lt;chr&gt;, 是否境外移入 &lt;chr&gt;,\n#   感染國家 &lt;chr&gt;, 確定病例數 &lt;dbl&gt;, 居住村里代碼 &lt;chr&gt;, 感染村里代碼 &lt;chr&gt;,\n#   血清型 &lt;chr&gt;, 內政部居住縣市代碼 &lt;chr&gt;, 內政部居住鄉鎮代碼 &lt;chr&gt;,\n#   內政部感染縣市代碼 &lt;chr&gt;, 內政部感染鄉鎮代碼 &lt;chr&gt;, 年 &lt;fct&gt;, 周 &lt;dbl&gt;\n\n\nConvert dengue to sf object such that the object would be able to be projected to TWD97. Before conversion, check that there is no missing value in coordinates\n\n\nShow the code\nsum(dengue$最小統計區中心點X == \"None\")\n\n\n[1] 10\n\n\nShow the code\nsum(dengue$最小統計區中心點Y == \"None\")\n\n\n[1] 10\n\n\nDrop those with None values: Currently could not find a effective way to fill in, so to not obstruct the conversion into a sf object, I decided to drop the rows with “None” values for the coordinates columns.\n\n\nShow the code\ndengue &lt;- dengue %&gt;% \n  filter(最小統計區中心點X != \"None\",\n         最小統計區中心點Y != \"None\")\nsum(dengue$最小統計區中心點X == \"None\")\n\n\n[1] 0\n\n\nShow the code\nsum(dengue$最小統計區中心點Y == \"None\")\n\n\n[1] 0\n\n\nConvert dengue to sf object and assign projected coordinate system\n\n\nShow the code\ndengue &lt;- st_as_sf(dengue,\n                   coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                   crs = 3824)\n\n\nDue to limited memory space, please go to Part 2 for further details."
  }
]