{
  "hash": "ebab589272f09eec4d5db42384f61e6e",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 2:\"\nformat: \n  html: \n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-line-numbers: true\n    code-copy: hover\nexecute: \n  eval: true\n  echo: true\n  freeze: auto\n---\n\n\n# 1.1 Packages included\n\nFor this exercise, the following packages will be used.\n\n-   arrow\n\n-   lubridate\n\n-   tidyverse\n\n-   tmap\n\n-   sf\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\"arrow\",\"lubridate\",\"tidyverse\",\"tmap\",\"sf\")\n```\n:::\n\n\n# 1.2 Import Grab-Posisi Dataset\n<<<<<<< HEAD\n\n`read_parquet(filePath)`: function to read parquet files, though the commented out line is preferred, it don't work on macOS.\n\n`as_datetime(df$fieldName)`: function from `lubridate`, convert integers into datetime\n\n=======\n`read_parquet(filePath)`: function to read parquet files, though the commented out line is preferred, it don't work on macOS.\n\n`as_datetime(df$fieldName)`: function from `lubridate`, convert integers into datetime\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_parquet(\"data/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n# df <- read_parquet(\"data/GrabPosisi/part-00000.parquet\")\n# can also use mutate\ndf$pingtimestamp <- as_datetime(df_1$pingtimestamp)\nwrite_rds(df, \"data/rds/part0.rds\")\n```\n:::\n\n\nThe field `pingtimestamp` is now in POSIXct format (tibble time format).\n\n# 1.3 Extract Trip starting location\n\nThe field `pingtimestamp` is now in POSIXct format (tibble time format).\n\n# 1.3 Extract Trip starting location\n*Use tidyverse function to do the extraction*\n\n`wday()`: function from `lubridate` to get the weekday of the imported datetime\n`factor()`: function that extracts out\n`arrange(column, .by_group = FALSE)`: sort ascending according to timestamp\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrip_starting <- df %>%\n  # group by trip id\n  group_by(trj_id) %>%\n  # sort ascending by default\n  arrange(pingtimestamp, .by_group = FALSE) %>%\n  # get 1st row\n  filter(row_number()==1) %>%\n  mutate(weekday = wday(pingtimestamp,\n                        label = TRUE,\n                        abbr=TRUE),\n         start_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) \n```\n:::\n\n\n# 1.4 Extract Trip destination\n\nUsing the previous code chunk with some modification\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrip_destination <- df %>%\n  # group by trip id\n  group_by(trj_id) %>%\n  # sort ascending by default\n  arrange(desc(pingtimestamp), .by_group = FALSE) %>%\n  # get 1st row\n  filter(row_number()==1) %>%\n  mutate(weekday = wday(pingtimestamp,\n                        label = TRUE,\n                        abbr=TRUE),\n         end_hr = factor(hour(pingtimestamp)),\n         day = factor(mday(pingtimestamp))) \n```\n:::\n\n\nFor own use, save in RDS; other wise, in requested format.\n\n\n::: {.cell}\n\n:::\n\n\n## Import data\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}