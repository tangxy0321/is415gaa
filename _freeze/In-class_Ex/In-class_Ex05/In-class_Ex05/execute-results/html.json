{
  "hash": "4b1012caa088248538aa64bbb0b21054",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 5: Global and Local Measures of Spatial Autocorrelation - sfdep methods\"\nformat: \n  html: \n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-line-numbers: true\n    code-copy: hover\nexecute: \n  eval: true\n  echo: true\n  freeze: auto\n---\n\n\n# Getting Started\n\n:::{.callout-important}\n#### Do it yourself\nUsing the strps learned in previous lesson, install packages `sf`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sfdep, tmap, tidyverse)\n```\n:::\n\n\nImport geospatial data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan2012 <- read.csv(\"data/aspatial/Hunan_2012.csv\")\nhunan_GDPPC <- read.csv(\"data/aspatial/Hunan_GDPPC.csv\")\nhunan <- st_read(dsn = \"data/geospatial\",\n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Hunan' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/In-class_Ex/In-class_Ex05/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nhunan %>% \n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 519287.2 ymin: 2635051 xmax: 1070836 ymax: 3242818\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n     NAME_2  ID_3    NAME_3   ENGTYPE_3 Shape_Leng Shape_Area    County\n1   Changde 21098   Anxiang      County   1.869074 0.10056190   Anxiang\n2   Changde 21100   Hanshou      County   2.360691 0.19978745   Hanshou\n3   Changde 21101    Jinshi County City   1.425620 0.05302413    Jinshi\n4   Changde 21102        Li      County   3.474325 0.18908121        Li\n5   Changde 21103     Linli      County   2.289506 0.11450357     Linli\n6   Changde 21104    Shimen      County   4.171918 0.37194707    Shimen\n7  Changsha 21109   Liuyang County City   4.060579 0.46016789   Liuyang\n8  Changsha 21110 Ningxiang      County   3.323754 0.26614198 Ningxiang\n9  Changsha 21111 Wangcheng      County   2.292093 0.13049161 Wangcheng\n10 Chenzhou 21112     Anren      County   2.240739 0.13343936     Anren\n                         geometry\n1  POLYGON ((825339.4 3209148,...\n2  POLYGON ((846673.4 3139165,...\n3  POLYGON ((810038.7 3190827,...\n4  POLYGON ((756935.9 3225838,...\n5  POLYGON ((783475.6 3207079,...\n6  POLYGON ((708206.5 3241744,...\n7  POLYGON ((1024633 3091569, ...\n8  POLYGON ((900741.8 3060845,...\n9  POLYGON ((906766.3 3077439,...\n10 POLYGON ((959144.5 2890585,...\n```\n\n\n:::\n:::\n\nCombine both dataframes by `left_join`\n\n-   left table must be `sf` object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_GDPPC <- left_join(hunan,\n                         hunan2012) %>% \n  select(1:4,7,15)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n\n```{.r .cell-code}\nhunan_GDPPC1 <- left_join(hunan,\n                         hunan2012)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(County)`\n```\n\n\n:::\n:::\n\n\nPlot choropleth map \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\ntmap mode set to plotting\n```\n\n\n:::\n\n```{.r .cell-code}\ntm_shape(hunan_GDPPC)+\n  tm_fill(\"GDPPC\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          title = \"GDPPC\")+\n  tm_layout(main.title = \"Distribution of GDP per capita by county, Hunan Province\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.title.size = 0.45,\n            legend.height = 0.45 ,\n            legend.width = 0.35,\n            frame = TRUE)+\n  tm_borders(alpha = 0.5)+\n  tm_compass(type = \"8star\",\n             size = 2)+\n  tm_scale_bar()+\n  tm_grid(alpha = 0.2)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex05_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Step 1: Derive contiguity weight: Queen's method\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_q <- hunan_GDPPC %>% \n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         # derived columns to be put before column 1\n         .before = 1)\n```\n:::\n\n\nCompute global Moran's I\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoranI <- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n```\n:::\n\n\nUse the test to get Moran's I statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_moran_test(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n```\n\n\n:::\n:::\n\n\nNow doing permutation version of Moran's I test: more simulation to confirm representive of the I statistics result\n\n-   prove that the result produced is reproducible, and hence is stable\n\n-   number of simulation will affect result (especially with large dataset)\n\n        -   reduce number of simulations when dataset is large, to 99 or even 49\n        \n        -   use `nsim = 99` to test speed of device (to get the approriate number of simulation)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value < 2.2e-16\nalternative hypothesis: two.sided\n```\n\n\n:::\n:::\n\nWhen explaining statistical evidence:\n\n-   p-value > or < alpha value\n\n    -   (not) enough statistical evidence to reject null hypothesis that spatial distribution is (independent from spatial)\n    \n-   Moran's I statistics value > or = or < 0\n\n    -   clustering, outlier, random\n",
    "supporting": [
      "In-class_Ex05_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}