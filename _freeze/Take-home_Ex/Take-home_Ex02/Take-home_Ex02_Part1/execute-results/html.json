{
  "hash": "b8a51170371ee0ed7651533e795070d8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 2: Application of Spatial and Spatio-temporal Analysis Methods to Discover the Distribution of Dengue Fever in Tainan City, Taiwan - Geospatial Data Wrangling\"\nformat: \n  html: \n    code-fold: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n    code-line-numbers: true\n    code-copy: hover\n    self-contained: true\nexecute: \n  eval: true\n  echo: true\n  freeze: auto\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, sfdep, lubridate)\n```\n:::\n\n\n# Import Data\n\nThe following datasets are used in this exercise.\n\n-   `TAIWAN_VILLAGE_2020`, a geospatial data of village boundary of Taiwan. It is in ESRI shapefile format. The data is in Taiwan Geographic Coordinate System TWD97.\n\n-   `Dengue_Daily.csv`, an aspatial data of reported dengue cases in Taiwan since 1998.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan <- st_read(dsn = \"../../data/geospatial\",\n                  layer = \"TAINAN_VILLAGE\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `TAINAN_VILLAGE' from data source \n  `/Users/tangtang/Desktop/IS415 Geospatial Analytics and Applications/practice/is415gaa/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n```\n\n\n:::\n\n```{.r .cell-code}\ndengue <- read_csv(\"../../data/aspatial/Dengue_Daily.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 106861 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (23): 個案研判日, 性別, 年齡層, 居住縣市, 居住鄉鎮, 居住村里, 最小統計區, 最小統計區中心點X, 最小統計區中心點Y, 一級...\ndbl   (1): 確定病例數\ndate  (2): 發病日, 通報日\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n# Preparing data for analysis\n\n## Study area preparation\n\nAccording to the task objective given, this exercise requested for towns labelled D01, D02, D04, D06, D07, D08, D32 and D39\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan <- tainan[tainan$TOWNID %in% c(\"D01\", \"D02\",\"D04\",\"D06\",\"D07\",\"D08\",\"D32\",\"D39\"),]\nplot(tainan)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot\nall\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_Part1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nAfter checking `VILLNAME` available in `tainan`, there are repeated village names that are under different towns. Assign new names to each village by combining existing town name with current village name\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan$VILLNAME <- paste(tainan$TOWNNAME, tainan$VILLNAME,\n                         sep = \"_\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n## Dengue fever layer preparation\n\nThis exercise requires dengue cases in Tainan, Taiwan. The original tibble is filtered by the condition where county name is Tainan and the desired time period of week 31 to 50 of 2023, and saved back to the same variable name.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue %>% \n  mutate(年 = factor(year(發病日)),\n         week = epiweek(發病日),\n         VILLNAME = paste(居住鄉鎮, 居住村里, sep = \"_\")) %>% \n  filter(年 == 2023,\n         居住縣市 == \"台南市\",\n         week >= 31,\n         week <= 50) \n```\n:::\n\n\nConvert `dengue` to `sf` object such that the object would be able to be projected to `TWD97`. Before conversion, check that there is no missing value in coordinates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(dengue$最小統計區中心點X == \"None\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(dengue$最小統計區中心點Y == \"None\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 10\n```\n\n\n:::\n:::\n\n\nDrop those with None values: Currently could not find a effective way to fill in, so to not obstruct the conversion into a `sf` object, I decided to drop the rows with \"None\" values for the coordinates columns. Also, to standardise the village name for `dengue` dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue %>% \n  filter(最小統計區中心點X != \"None\",\n         最小統計區中心點Y != \"None\",\n         VILLNAME  %in% tainan$VILLNAME)\nsum(dengue$最小統計區中心點X == \"None\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(dengue$最小統計區中心點Y == \"None\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\nConvert `dengue` to `sf` object and assign projected coordinate system\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- st_as_sf(dengue,\n                   coords = c(\"最小統計區中心點X\",\"最小統計區中心點Y\"),\n                   crs = 3824)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n# Get derived dengue layer\n\nUsing `spacetime()` function to create `spacetime` object\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"發病日\"             \"個案研判日\"         \"通報日\"            \n [4] \"性別\"               \"年齡層\"             \"居住縣市\"          \n [7] \"居住鄉鎮\"           \"居住村里\"           \"最小統計區\"        \n[10] \"一級統計區\"         \"二級統計區\"         \"感染縣市\"          \n[13] \"感染鄉鎮\"           \"感染村里\"           \"是否境外移入\"      \n[16] \"感染國家\"           \"確定病例數\"         \"居住村里代碼\"      \n[19] \"感染村里代碼\"       \"血清型\"             \"內政部居住縣市代碼\"\n[22] \"內政部居住鄉鎮代碼\" \"內政部感染縣市代碼\" \"內政部感染鄉鎮代碼\"\n[25] \"年\"                 \"week\"               \"VILLNAME\"          \n[28] \"geometry\"          \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_grp <- dengue %>%\n  group_by(VILLNAME, week) %>%\n  summarise(num_dengue_cases = n()) %>% \n  filter(VILLNAME != \"None\") %>% \n  st_drop_geometry()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'VILLNAME'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ntainan <- tainan %>% \n  filter(VILLNAME %in% unique(dengue_grp$VILLNAME))\n```\n:::\n\n\nAs the time-series is incomplete, stating only weeks that have recorded instances of dengue, weeks with `num_dengue_cases = 0` needs to be included as well.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (vill in dengue_grp$VILLNAME) {\n  vill_record <- dengue_grp %>%\n    filter(VILLNAME == vill)\n  for (wk in 31:50) {\n    if (!(wk %in% vill_record$week)) {\n      dengue_grp[nrow(dengue_grp)+1,] = list(vill, wk, 0)\n    }\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntainan_dengue_st <- spacetime(.data = dengue_grp,\n                              .geometry = tainan,\n                              .loc_col = \"VILLNAME\",\n                              .time_col = \"week\")\nis_spacetime_cube(tainan_dengue_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\nThe derived `tainan_dengue` layer is then saved as a RDS file.\n\n::: {.cell}\n\n:::\n\n\nPlease go to [Report](Take-home_Ex/Take-home_Ex02/Take-home_Ex02_Part2.html) for further details.\n",
    "supporting": [
      "Take-home_Ex02_Part1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}